<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Seat Reservation</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css">
  <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900&display=swap'>
  <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap'>
  <link rel="stylesheet" href="css/reserve.css">
  <link rel="stylesheet" href="css/login.css">
  <style>
    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .form-group {
      display: flex; /* Added */
      flex-direction: row; /* Added */
      align-items: center; /* Added */
      margin-bottom: 10px; /* Adjusted */
    }
    .form-group label {
      margin-right: 10px; /* Adjusted */
    }
    .form-group select,
    .form-group input[type="date"] {
      margin-left: 5px; /* Adjusted */
      width: 180px;
    }

    .seats {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      gap: 0px;
      margin-top: 20px;
    }
    .seat {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      border: 1px solid #ccc;
      width: 60px; /* Square dimensions */
      height: 60px; /* Square dimensions */
      cursor: pointer;
      margin: 5px; /* Center the seats */
    } 
    .seat.reserved {
      background-color: #f44336;
    }
    .seat img {
      width: 50px; /* Adjusted size for smaller seats */
      height: 50px; /* Adjusted size for smaller seats */
    }

    .seat p {
      margin-top: 5px;
      font-size: 10px; /* Adjusted font size for smaller seats */
    }
    .bdialog {
      margin: 5px;
      padding: 10px 20px;
    }
  </style>
</head>
<body>
<input type="hidden" id="userID" value="{{user.userID}}">

  <div class="container">
    <h1>Seat Reservation</h1>
    <h2 id="building-name">Velasco</h2> 
    
    <div class="form-group">
      <label for="date">Choose a Date:</label>
      <input type="date" id="date" name="date" required>
    </div>
    
    <div class="form-group">
      <label for="timeslot">Choose a Timeslot:</label>
      <select id="timeslot" name="timeslot" required>
        <option value="7:30-8:00">07:30 - 08:00</option>
        <option value="8:15-8:45">08:15 - 08:45</option>
        <option value="9:00-9:30">09:00 - 09:30</option>
        <option value="9:45-10:15">09:45 - 10:15</option>
        <option value="10:30-11:00">10:30 - 11:00</option>
        <option value="11:15-11:45">11:15 - 11:45</option>
        <option value="12:00-12:30">12:00 - 12:30</option>
        <option value="12:45-13:15">12:45 - 13:15</option>
        <option value="13:30-14:00">13:30 - 14:00</option>
        <option value="14:15-14:45">14:15 - 14:45</option>
        <option value="15:00-15:30">15:00 - 15:30</option>
        <option value="15:45-16:15">15:45 - 16:15</option>
        <option value="16:30-17:00">16:30 - 17:00</option>
      </select>
    </div>

    <div class="seats">
      <!-- Seats will be generated here by JavaScript -->
    </div>
    <span style="justify-content: right; display: flex; padding: 30px;">
      <button class="bdialog" onclick="goBack();" style="width: 200px;">Back</button>
    </span>
  </div>

  <dialog id="dialog">
    <h2>Book this Seat?</h2>
    <p><b>Date</b>: <span id="selectedDate">XX/XX/XXXX</span></p>
    <p><b>Time</b>: <span id="selectedTime">XX:XX - XX:XX</span></p>
    <p><b>Building</b>: Velasco</p>
    <p><b>Seat</b>: <span id="selectedSeat">12</span></p>
    <form>
      <p style="color: #006937;">Register anonymously?</p>
      <label>
        <input type="radio" name="radio" value="Yes" checked>
        <span>Yes</span>
      </label>
      <label>
        <input type="radio" name="radio" value="No">
        <span>No</span>
      </label>
    </form>
    <div id="technicianOptions" style="display: none; margin-top: 10px;">
      <label for="student"><b>Student:</b></label>
      <select id="student">
        <option value="">Josheart Adrienne Serrano</option>
        <option value="">Con Miko Serrano</option>
        <option value="">Tristan Raphael Pacana</option>
        <option value="">Charmaine Rosal</option>
      </select>
    </div>
    <br>
    <button onclick="closeDialog();" aria-label="close" class="x">❌</button>
    <span style="align-items: center; display: flex; flex-direction: row; justify-content: center; margin-bottom: 50px;">
        <button onclick="submitReservation();" class="bdialog">Book</button>
        <button onclick="closeDialog();" class="bdialog" style="background-color: red;">Cancel</button>
    </span>
  </dialog>

  <dialog id="success">
    <h2>Booked Successfully</h2>
    <p><b>Student</b>: <span id="student">{{user.name}}</span></p>
    <p><b>Date</b>: <span id="successDate">XX/XX/XXXX</span></p>
    <p><b>Time</b>: <span id="successTime">XX:XX - XX:XX</span></p>
    <p><b>Building</b>: Velasco</p>
    <p><b>Seat</b>: <span id="successSeat">12</span></p>
    <button onclick="closeSuccessDialog();" aria-label="close" class="x">❌</button>
    <span style="align-items: center; display: flex; flex-direction: row; justify-content: center; margin-bottom: 50px;">
      <button onclick="closeSuccessDialog();" class="bdialog">Close</button>
    </span>
  </dialog>
  
  <dialog id="guest">
    <h2>Please Login to Book Seats</h2>
    <button onclick="closeGuestDialog();" aria-label="close" class="x">❌</button>
    <span style="align-items: center; display: flex; flex-direction: row; justify-content: center; margin-bottom: 50px;">
      <button onclick="closeGuestDialog(); location.href='index'" class="bdialog">Go back to Homepage</button>
    </span>
  </dialog>

  <dialog id="booked">
    <h2>This Seat is Already Booked!</h2>
    <p><b>By</b>: <span id="bookedBy">Unknown</span></p>
    <p><b>Date</b>: <span id="bookedDate">XX/XX/XXXX</span></p>
    <p><b>Time</b>: <span id="bookedTime">XX:XX - XX:XX</span></p>
    <p><b>Building</b>: Velasco</p>
    <p><b>Seat</b>: <span id="bookedSeat">12</span></p>
    <div id="technicianOptions" style="display: none; margin-top: 10px;">
      <div style="display: flex; justify-content: center;">
        <button onclick="" class="bdialog">Edit Reservation</button>
        <button onclick="" class="bdialog">Delete Reservation</button>
      </div>
    </div>
    <div style=" display: flex; flex-direction: row; justify-content: center; align-items:center;">
      <div id="cancelButtonContainer" style=" display: flex; flex-direction: row; justify-content: center; align-items:center;">
      <button onclick="cancelReservation();" class="bdialog" style="background-color: red;">Cancel Reservation</button>
    </div>
    </div>
    <button onclick="closeBookedDialog();" aria-label="close" class="x">❌</button>
    <span style="align-items: center; display: flex; flex-direction: row; justify-content: center; margin-bottom: 50px;">
      <button onclick="closeBookedDialog();" class="bdialog">Close</button>
    </span>
  </dialog>

  <script>
    const building = "Velasco";
    const userID = document.getElementById('userID').value;  // Pass userID from session

    async function fetchSeats() {
      const date = document.getElementById('date').value;
      const timeslot = document.getElementById('timeslot').value;
      try {
        const response = await fetch(`/api/seats?date=${date}&timeslot=${timeslot}&building=${building}`);
        const seats = await response.json();
        console.log(seats); // Debug: log the seats data
        displaySeats(seats);
      } catch (error) {
        console.error('Error fetching seats:', error);
      }
    }

    function displaySeats(seats) {
      const seatsContainer = document.querySelector('.seats');
      seatsContainer.innerHTML = '';
      seats.forEach((seat) => {
        const seatElement = document.createElement('div');
        seatElement.className = 'seat' + (seat.isAvailable ? '' : ' reserved');
        seatElement.onclick = () => seat.isAvailable ? showModal(seat) : showReservedModal(seat);
        seatElement.innerHTML = `
          <img src="img/comp.png" alt="Seat">
          <p>Seat ${parseInt(seat.seatID.split('-').pop(), 10)}</p>
        `;
        seatsContainer.appendChild(seatElement);
      });
    }

    async function showModal(seat) {
      const dialog = document.getElementById('dialog');
      const selectedDate = document.getElementById('date').value;
      const selectedTime = document.getElementById('timeslot').value;
      const seatNumber = parseInt(seat.seatID.split('-').pop(), 10);
      document.getElementById('selectedDate').textContent = selectedDate;
      document.getElementById('selectedTime').textContent = selectedTime;
      document.getElementById('selectedSeat').textContent = seatNumber;

      const userType = localStorage.getItem('userType');
      const technicianOptions = document.getElementById('technicianOptions');
      if (userType === 'technician') {
        technicianOptions.style.display = 'block';
      } else {
        technicianOptions.style.display = 'none';
      }

      dialog.showModal();
    }

async function showReservedModal(seat) {
  const dialog = document.getElementById('booked');
  const selectedDate = document.getElementById('date').value;
  const selectedTime = document.getElementById('timeslot').value;
  const seatNumber = parseInt(seat.seatID.split('-').pop(), 10);
  document.getElementById('bookedDate').textContent = selectedDate;
  document.getElementById('bookedTime').textContent = selectedTime;
  document.getElementById('bookedSeat').textContent = seatNumber;

  // Fetch the booking details
  const response = await fetch(`/api/seats?date=${selectedDate}&timeslot=${selectedTime}&building=${building}`);
  const seatDetails = await response.json();
  const bookedSeat = seatDetails.find(s => s.seatID === seat.seatID);

  if (bookedSeat) {
    const userIDNumber = parseInt(bookedSeat.userID, 10);  // Ensure userID is a number
    if (!isNaN(userIDNumber)) {
      const userResponse = await fetch(`/api/user/${userIDNumber}`);
      const user = await userResponse.json();

      if (bookedSeat.userID === parseInt(userID, 10)) {
        document.getElementById('bookedBy').innerHTML = `<a href="profile/${user.userID}">${user.name}</a>`;
        document.getElementById('cancelButtonContainer').style.display = 'block';
        if (bookedSeat.isAnonymous) {
          document.getElementById('bookedBy').innerHTML = `<a href="profile/${user.userID}">${user.name}</a>` + ' (Anonymous)';
        }
      } else {
        if (bookedSeat.isAnonymous) {
          document.getElementById('bookedBy').textContent = 'Anonymous';
        } else {
          document.getElementById('bookedBy').innerHTML = `<a href="profile/${user.userID}">${user.name}</a>`;
        }
        document.getElementById('cancelButtonContainer').style.display = 'none';
      }
    } else {
      console.error('Invalid userID:', bookedSeat.userID);
    }
  }

  const userType = localStorage.getItem('userType');
  const technicianOptions = dialog.querySelector('#technicianOptions');
  if (userType === 'technician') {
    technicianOptions.style.display = 'block';
  } else {
    technicianOptions.style.display = 'none';
  }

  dialog.showModal();
}

    async function submitReservation() {
      const selectedDate = document.getElementById('date').value;
      const selectedTime = document.getElementById('timeslot').value;
      const seatID = document.getElementById('selectedSeat').textContent;
      const isAnonymous = document.querySelector('input[name="radio"]:checked').value === 'Yes';
      
      if (!userID) {
        const guestDialog = document.getElementById('guest');
        guestDialog.showModal();
        return;
      }

      try {
        const response = await fetch('/api/reserve', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ date: selectedDate, timeslot: selectedTime, seatID: `${building}-${selectedDate}-${selectedTime}-${seatID}`, isAnonymous, userID })
        });
        const result = await response.json();
        console.log('Reservation Result:', result); // Debug: log the reservation result
        if (result.success) {
          fetchSeats(); // Refresh seat data
          const dialog = document.getElementById('dialog');
          dialog.close();
          
          // Fetch user information
          let userName = 'Anonymous';
          if (!isAnonymous) {
            const userResponse = await fetch(`/api/user/${userID}`);
            const user = await userResponse.json();
            console.log('User Data:', user); // Debug: log the user data
            userName = user.name;
          }

          // Update the success modal with reservation details
          document.getElementById('successDate').textContent = selectedDate;
          document.getElementById('successTime').textContent = selectedTime;
          document.getElementById('successSeat').textContent = seatID;
          document.getElementById('student').textContent = userName;

          const successDialog = document.getElementById('success');
          successDialog.showModal();
        } else {
          console.error('Error reserving seat:', result.message);
        }
      } catch (error) {
        console.error('Error reserving seat:', error);
      }
    }

    async function cancelReservation() {
      const selectedDate = document.getElementById('bookedDate').textContent;
      const selectedTime = document.getElementById('bookedTime').textContent;
      const seatID = document.getElementById('bookedSeat').textContent;

      try {
        const response = await fetch('/api/cancel', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ date: selectedDate, timeslot: selectedTime, seatID: `${building}-${selectedDate}-${selectedTime}-${seatID}`, userID })
        });
        const result = await response.json();
        console.log('Cancellation Result:', result); // Debug: log the cancellation result
        if (result.success) {
          fetchSeats(); // Refresh seat data
          const bookedDialog = document.getElementById('booked');
          bookedDialog.close();
        } else {
          console.error('Error cancelling reservation:', result.message);
        }
      } catch (error) {
        console.error('Error cancelling reservation:', error);
      }
    }

    function closeDialog() {
      const dialog = document.getElementById('dialog');
      dialog.close();
    }

    function closeSuccessDialog() {
      const successDialog = document.getElementById('success');
      successDialog.close();
    }

    function closeBookedDialog() {
      const successDialog = document.getElementById('booked');
      successDialog.close();
    }

    function closeGuestDialog() {
      const guestDialog = document.getElementById('guest');
      guestDialog.close();
    }

      document.getElementById('date').addEventListener('change', () => {
      const selectedDate = document.getElementById('date').value;
      localStorage.setItem('selectedDate', selectedDate);
      fetchSeats();
    });

    document.getElementById('timeslot').addEventListener('change', () => {
      const selectedTime = document.getElementById('timeslot').value;
      localStorage.setItem('selectedTime', selectedTime);
      fetchSeats();
    });

     function goBack() {
      localStorage.removeItem('selectedDate');
      localStorage.removeItem('selectedTime');
      window.history.back();
    }

   const today = new Date();
    const maxDate = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);
    const formattedMaxDate = maxDate.toISOString().split('T')[0];
    const dateInput = document.getElementById('date');
    dateInput.setAttribute('min', today.toISOString().split('T')[0]);
    dateInput.setAttribute('max', formattedMaxDate);

    // Retrieve and set the stored date and time values if available
      const storedDate = localStorage.getItem('selectedDate');
    const storedTime = localStorage.getItem('selectedTime');
    if (storedDate) {
      dateInput.value = storedDate;
    } else {
      dateInput.value = today.toISOString().split('T')[0];
    }
    if (storedTime) {
      document.getElementById('timeslot').value = storedTime;
    } else {
      document.getElementById('timeslot').value = '7:30-8:00'; // Set to first possible time slot
    }

    fetchSeats(); // Initial fetch of seats data
  </script>
</body>
</html>

